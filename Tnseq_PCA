library(DESeq2)
library(ggplot2)
genes <- data.frame(id = rep("", length(gff[,1]), stringsAsFactors = FALSE))
genes$id <- as.character(genes$id)
for (i in 1:length(gff[,1])) {
  genes$id[i] <- strsplit(grep("locus_tag",strsplit(as.character(gff$att[i]),";")[[1]], value=T),"=")[[1]][2]
}

finalcounts <- cbind(genes,genecounts)
rownames(finalcounts) <-finalcounts[,1]
finalcounts <-finalcounts[,-1]
finalcounts <- as.data.frame.matrix(finalcounts)
sample_info <-  data.frame(condition=c(rep("sNO", 5),
                                       rep("rNO", 5),
                                       rep("sIn", 5),
                                       rep("rIn", 5)))

dds <- DESeqDataSetFromMatrix(countData = finalcounts , colData= sample_info, design = ~condition)
vst <- varianceStabilizingTransformation(dds, blind = F)
logdata <- rlog(dds)
pcaData <- plotPCA(logdata, returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(x=PC1, y=PC2, color=condition)) +
  geom_point(size=3) +
  xlab(paste0("PC1: ",percentVar[1],"% variance")) +
  ylab(paste0("PC2: ",percentVar[2],"% variance")) + 
  coord_fixed()
ggsave("NO_logdata.tiff", dpi=200, device = "tiff") 

vst <- varianceStabilizingTransformation(dds, blind = F)
pcaData <- plotPCA(vst, returnData=TRUE)
percentVar <- round(100 * attr(pcaData, "percentVar"))
ggplot(pcaData, aes(x=PC1, y=PC2, color=condition)) +
  geom_point(size=3) +
  xlab(paste0("PC1: ",percentVar[1],"% variance")) +
  ylab(paste0("PC2: ",percentVar[2],"% variance")) + 
  coord_fixed()
ggsave("NO_vst.tiff", dpi=200, device = "tiff") 

	
